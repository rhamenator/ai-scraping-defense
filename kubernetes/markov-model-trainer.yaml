# kubernetes/markov-model-trainer.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: markov-model-trainer
  namespace: ai-defense
spec:
  # Runs daily at 2 AM.
  schedule: "0 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: markov-trainer
            image: your-registry/ai-scraping-defense:latest
            imagePullPolicy: Always
            # Use the Rust-backed trainer via PyO3
            command: ["python", "-c", "import os, markov_train_rs; markov_train_rs.train_from_corpus_rs(os.environ['CORPUS_FILE_PATH'])"]
            envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: postgres-credentials
            env:
            - name: CORPUS_FILE_PATH
              value: "/corpus_data/wikipedia_corpus.txt"
            volumeMounts:
            - name: corpus-storage
              mountPath: /corpus_data
              readOnly: true
          restartPolicy: OnFailure
          volumes:
          - name: corpus-storage
            persistentVolumeClaim:
              claimName: corpus-data-pvc
