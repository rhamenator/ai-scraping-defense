# kubernetes/secrets.yaml
# Defines Kubernetes Secrets for sensitive configuration.
# IMPORTANT: Replace placeholder base64 values with your actual base64-encoded secrets.

apiVersion: v1
kind: Secret
metadata:
  name: smtp-credentials
  namespace: ai-defense
type: Opaque
data:
  # echo -n 'YOUR_SMTP_PASSWORD_HERE' | base64
  smtp_password.txt: WU9VUl9TTVRQX1BBU1NXT1JEX0hFUkU=

---
apiVersion: v1
kind: Secret
metadata:
  name: external-api-credentials
  namespace: ai-defense
type: Opaque
data:
  # echo -n 'YOUR_EXTERNAL_API_KEY_HERE' | base64
  external_api_key.txt: WU9VUl9FWFRFUk5BTF9BUElfS0VZX0hFUkU=

---
apiVersion: v1
kind: Secret
metadata:
  name: ip-reputation-credentials
  namespace: ai-defense
type: Opaque
data:
  # echo -n 'YOUR_IP_REPUTATION_API_KEY_HERE' | base64
  ip_reputation_api_key.txt: WU9VUl9JUF9SRVBVVEFUSU9OX0FQSV9LRVlfSEVSRQ==

---
apiVersion: v1
kind: Secret
metadata:
  name: community-blocklist-credentials
  namespace: ai-defense
type: Opaque
data:
  # echo -n 'YOUR_COMMUNITY_BLOCKLIST_API_KEY_HERE' | base64
  community_blocklist_api_key.txt: WU9VUl9DT01NVU5JVFlfQkxPQ0tMSVNUX0FQSV9LRVlfSEVSRQ==

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: ai-defense
type: Opaque
data:
  # Key name matches what the app expects (e.g., pg_password.txt if mounted as a file)
  # echo -n 'your_secure_pg_password' | base64
  pg_password.txt: WU9VUl9TRUNVUkVfUEdEX1BBU1NXT1JEX0hFUkU=

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: ai-defense
type: Opaque
data:
  # echo -n 'your_secure_redis_password' | base64
  redis_password.txt: WU9VUl9TRUNVUkVfUkVESVNfUEFTU1dPUkRfSEVSRQ==
  # If Redis server itself needs 'requirepass', you'd also have a 'password' key here for the server config.
  # password: WU9VUl9TRUNVUkVfUkVESVNfUEFTU1dPUkRfSEVSRQ==

---
apiVersion: v1
kind: Secret
metadata:
  name: system-seed-secret # New secret for SYSTEM_SEED
  namespace: ai-defense
type: Opaque
data:
  # Replace with your actual base64-encoded secure random string
  # Example: echo -n 'your_very_secure_and_random_seed_string_32_chars_long' | base64
  SYSTEM_SEED: WU9VUl9WRVJZX1NFQ1VSRV9BTkRfUkFORE9NX1NFRURfU1RSSU5HXzMyX0NIQVJTX0xPTkc=
