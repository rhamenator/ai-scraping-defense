# kubernetes/tarpit-api-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: tarpit-api
  namespace: ai-defense
spec:
  selector:
    app: tarpit-api
  ports:
  - name: http
    port: 8001
    targetPort: 8001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tarpit-api
  namespace: ai-defense
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tarpit-api
  template:
    metadata:
      labels:
        app: tarpit-api
    spec:
      containers:
      - name: tarpit-api
        image: your-registry/ai-scraping-defense:latest
        command: ["uvicorn", "src.tarpit.tarpit_api:app", "--host", "0.0.0.0", "--port", "8001"]
        ports:
        - containerPort: 8001
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        envFrom:
        - configMapRef:
            name: app-config
        env:
        # Load the PostgreSQL user from the secret
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_USER
        # Load the PostgreSQL password from the secret
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_PASSWORD
        # Load the PostgreSQL database name from the secret
        - name: PG_DB
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_DB
        # Load the Redis password from the secret
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: REDIS_PASSWORD
        # Load the system seed from the new secret
        - name: SYSTEM_SEED
          valueFrom:
            secretKeyRef:
              name: system-seed-secret
              key: SYSTEM_SEED
        volumeMounts:
        - name: archives-storage
          mountPath: /app/archives
          readOnly: true
      volumes:
      - name: archives-storage
        persistentVolumeClaim:
          claimName: archives-pvc
