user  nginx;
env ENABLE_HTTPS;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Global rate limiting configuration for defense APIs
    limit_req_zone $binary_remote_addr zone=global_limit:10m rate=30r/s;

    # Baseline security headers (HSTS is only effective over HTTPS)
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Default Server Block for Welcome Page
    # This server block acts as the default catch-all. If no other server_name matches,
    # it will serve the welcome page and other documentation UI files.
    server {
        listen 80 default_server;
        server_name _; # Underscore is a catch-all server name

        # HTTPS enforcement when enabled
        if ($https_redirect) {
            return 301 https://$host$request_uri;
        }

        # The root is set to the directory where our UI pages are mounted.
        root /usr/share/nginx/html/docs_ui;

        # The default file to serve is welcome.html
        index welcome.html;

        location / {
            try_files $uri $uri/ =404;
            limit_req zone=global_limit burst=60 nodelay;
        }
    }

    # Optional HTTPS server; assumes certs provided via TLS_CERT_PATH/TLS_KEY_PATH
    # Redirect map based on ENABLE_HTTPS env
    map $ENABLE_HTTPS $https_redirect {
        default 0;
        "true" 1;
        "True" 1;
        "1" 1;
    }
    # This block remains active; if certs are missing, OpenResty may fail to start.
    # Ensure ENABLE_HTTPS=true and certs exist in production.
    server {
        listen 443 ssl;
        server_name _;
        ssl_certificate     /etc/nginx/certs/tls.crt;
        ssl_certificate_key /etc/nginx/certs/tls.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        root /usr/share/nginx/html/docs_ui;
        index welcome.html;

        location / {
            try_files $uri $uri/ =404;
            limit_req zone=global_limit burst=60 nodelay;
        }
    }

    # Include server blocks for all user-configured websites.
    # When you add a .conf file to the nginx/sites-enabled directory for a new website,
    # it will be loaded here. This allows you to protect multiple sites.
    include /etc/nginx/sites-enabled/*.conf;
}
        
