# Load the ModSecurity module
load_module modules/ngx_http_modsecurity_module.so;

# Logging Format
log_format detailed '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time ua="$http_user_agent"';

access_log /var/log/nginx/access.log detailed;
error_log /var/log/nginx/error.log warn;

# Enable ModSecurity and load rules
modsecurity on;
modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;

# Gzip Settings
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

# Upstream Services
upstream ai_service {
    server ai_service:${AI_SERVICE_PORT};
}
upstream escalation_engine {
    server escalation_engine:${ESCALATION_ENGINE_PORT};
}
upstream tarpit_api {
    server tarpit_api:${TARPIT_API_PORT};
}
upstream admin_ui {
    server admin_ui:${ADMIN_UI_PORT};
}

# Lua settings
lua_package_path "/etc/nginx/lua/?.lua;;";
lua_shared_dict blocklist_cache 10m;
limit_req_zone $binary_remote_addr zone=req_rate_limit:10m rate=60r/m;

# Docker DNS Resolver
resolver 127.0.0.11 valid=30s;

# Main Server Block
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name localhost _;

    # Standard security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;

    # Robots.txt
    location = /robots.txt {
        alias /etc/nginx/robots.txt;
        access_log off;
        log_not_found off;
    }

    # Serve generated ZIP archives (honeypots)
    location /docs/archives/ {
        alias /usr/share/nginx/html/archives/;
        autoindex off;
    }
    
    # Health check endpoint for Docker
    location /healthz {
        access_log off;
        return 200 "OK";
    }

    # Lua script for initial IP blocklist check
    access_by_lua_file /etc/nginx/lua/check_blocklist.lua;

    # Admin UI location
    location /admin/ {
        auth_basic              "Admin Area - Restricted";
        auth_basic_user_file    /etc/nginx/secrets/.htpasswd;
        proxy_pass              http://admin_ui/;
        
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Script-Name /admin;
        
        proxy_http_version      1.1;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection "upgrade";
        
        proxy_connect_timeout   60s;
        proxy_send_timeout      60s;
        proxy_read_timeout      60s;

        proxy_redirect          off;
        proxy_buffering         off;
    }

    # Hidden endpoint to serve the browser fingerprint script
    location = /__fp.js {
        proxy_pass http://admin_ui/static/fingerprint.js;
        proxy_set_header Host $host;
        access_log off;
    }

    # Tarpit API (internal redirect target)
    location /api/tarpit {
        internal;
        proxy_pass http://tarpit_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Main content / Proxy to real backend
    location / {
        set $lua_proxy_pass_upstream '';
        access_by_lua_file /etc/nginx/lua/detect_bot.lua;
        limit_req zone=req_rate_limit burst=100 nodelay;

        if ($lua_proxy_pass_upstream ~* "^http") {
            proxy_pass $lua_proxy_pass_upstream;
        }

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS Server Block (optional)
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name localhost _;

    ssl_certificate ${TLS_CERT_PATH};
    ssl_certificate_key ${TLS_KEY_PATH};

    # Standard security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;

    # Robots.txt
    location = /robots.txt {
        alias /etc/nginx/robots.txt;
        access_log off;
        log_not_found off;
    }

    # Serve generated ZIP archives (honeypots)
    location /docs/archives/ {
        alias /usr/share/nginx/html/archives/;
        autoindex off;
    }

    # Health check endpoint for Docker
    location /healthz {
        access_log off;
        return 200 "OK";
    }

    # Lua script for initial IP blocklist check
    access_by_lua_file /etc/nginx/lua/check_blocklist.lua;

    # Admin UI location
    location /admin/ {
        auth_basic              "Admin Area - Restricted";
        auth_basic_user_file    /etc/nginx/secrets/.htpasswd;
        proxy_pass              http://admin_ui/;

        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Script-Name /admin;

        proxy_http_version      1.1;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection "upgrade";

        proxy_connect_timeout   60s;
        proxy_send_timeout      60s;
        proxy_read_timeout      60s;

        proxy_redirect          off;
        proxy_buffering         off;
    }

    # Hidden endpoint to serve the browser fingerprint script
    location = /__fp.js {
        proxy_pass http://admin_ui/static/fingerprint.js;
        proxy_set_header Host $host;
        access_log off;
    }

    # Tarpit API (internal redirect target)
    location /api/tarpit {
        internal;
        proxy_pass http://tarpit_api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Main content / Proxy to real backend
    location / {
        set $lua_proxy_pass_upstream '';
        access_by_lua_file /etc/nginx/lua/detect_bot.lua;
        limit_req zone=req_rate_limit burst=100 nodelay;

        if ($lua_proxy_pass_upstream ~* "^http") {
            proxy_pass $lua_proxy_pass_upstream;
        }

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
