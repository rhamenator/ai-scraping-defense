```nginx
# anti_scrape/nginx/nginx.conf (Modified Example)
# Nginx configuration *within* the anti_scrape stack.
# Assumes this Nginx receives traffic proxied from the main website Nginx.

user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # SSL Settings (If this Nginx terminates TLS)
    # If TLS is terminated by an upstream load balancer, these might not be needed here.
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparam.pem; # Mounted from host/secret
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" ' # Log original client IP
                       'rt=$request_time';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=sitelimit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=actionlimit:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=botslowdown:10m rate=5r/m;

    # Lua Configuration
    lua_package_path "/etc/nginx/lua/?.lua;;";
    lua_shared_dict blocklist_cache 1m; # Example, not used by current scripts
    lua_code_cache on;

    # Define upstream for the REAL application backend
    # Use the K8s service name or internal Docker network hostname/IP
    # The value comes from the REAL_BACKEND_HOST env var set in docker-compose/k8s
    # Example: set $real_backend http://your-real-app-service:8080;
    set $real_backend ${REAL_BACKEND_HOST};

    server {
        listen 80;
        listen [::]:80;
        # Uncomment below if this Nginx handles TLS termination
        # listen 443 ssl http2;
        # listen [::]:443 ssl http2;

        # Server name can be wildcard or specific if needed
        server_name _;

        # SSL Certificate Paths (If handling TLS)
        # ssl_certificate /etc/nginx/certs/tls.crt; # Mounted from host/secret
        # ssl_certificate_key /etc/nginx/certs/tls.key; # Mounted from host/secret

        root /var/www/html; # For serving error pages or static assets if needed
        index index.html index.htm;

        access_log /var/log/nginx/access.log detailed;

        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "interest-cohort=()" always;

        # --- Lua Request Processing ---
        access_by_lua_file /etc/nginx/lua/check_blocklist.lua;
        access_by_lua_file /etc/nginx/lua/detect_bot.lua; # This now handles tarpit redirect or allows

        # --- Internal Tarpit API Location ---
        location /api/tarpit {
            internal; # Only accessible via ngx.exec from detect_bot.lua
            limit_req zone=botslowdown burst=2;
            proxy_pass http://tarpit_api:8001/tarpit; # Pass to Tarpit service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_read_timeout 300s;
        }

        # --- Proxy to Admin UI ---
        location /admin/ {
            limit_req zone=actionlimit burst=10 nodelay;
            proxy_pass http://admin_ui:5002/; # Pass to Admin UI service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 90s;
        }

        # --- Location for serving rotated archives (if used) ---
        location /docs/archives/ {
            alias /var/www/html/docs/archives/; # Mounted volume
            limit_req zone=botslowdown burst=5;
            add_header X-Robots-Tag "noindex, nofollow";
        }

        # --- Default Location: Proxy to REAL Backend ---
        # If Lua scripts allow the request, it reaches here.
        location / {
            limit_req zone=sitelimit burst=20 nodelay; # General rate limit

            # IMPORTANT: Proxy allowed traffic to the actual web application backend
            proxy_pass $real_backend; # Use the variable set above

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Adjust timeouts as needed for your real application
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering on;
        }

        # --- Deny Access & Error Pages ---
        location ~ /\. { deny all; }
        location = /robots.txt {
             # Serve the mounted robots.txt directly or proxy to backend
             alias /etc/nginx/robots.txt; # Example: Serve mounted file
             # proxy_pass $real_backend; # Example: Proxy to real app's robots.txt
             log_not_found off; access_log off;
        }
        location = /favicon.ico { log_not_found off; access_log off; }

        error_page 403 /403_forbidden.html;
        error_page 404 /404_not_found.html;
        error_page 500 502 503 504 /50x_error.html;

        location = /403_forbidden.html { root /var/www/html/errors; internal; }
        location = /404_not_found.html { root /var/www/html/errors; internal; }
        location = /50x_error.html { root /var/www/html/errors; internal; }
    }
}