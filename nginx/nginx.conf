user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings (Uncomment and configure if using HTTPS)
    ##

    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_prefer_server_ciphers on;
    # ssl_dhparam /etc/nginx/dhparam.pem;
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 1d;
    # ssl_session_tickets off;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    ##
    # Rate Limiting
    ##
    limit_req_zone $binary_remote_addr zone=apilimit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=botslowdown:10m rate=1r/s;

    ##
    # Lua Settings
    ##
    lua_package_path "/etc/nginx/lua/?.lua;;";
    # lua_package_cpath '/usr/local/lib/lua/5.1/?.so;;'; # Adjust if lua-resty-redis .so files are elsewhere

    # Increase Lua VM shared dictionary size if needed for caching/state
    # lua_shared_dict my_cache 10m;

    ##
    # Virtual Host Configs
    ##
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        root /var/www/html;
        index index.html index.htm;

        # Logging format for GoAccess
        log_format combined_realip '$remote_addr - $remote_user [$time_local] '
                                   '"$request" $status $body_bytes_sent '
                                   '"$http_referer" "$http_user_agent"';
        access_log /var/log/nginx/access.log combined_realip;

        # --- Security Headers ---
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;

        # --- Lua Request Processing ---
        # IMPORTANT: Run blocklist check BEFORE other detection logic

        # Blocklist Check (uses check_blocklist.lua)
        access_by_lua_file /etc/nginx/lua/check_blocklist.lua;

        # Original Bot Detection (uses detect_bot.lua - runs only if NOT blocked by check_blocklist)
        access_by_lua_file /etc/nginx/lua/detect_bot.lua;

        # --- Main Application Routes ---

        location /docs/ {
            limit_req zone=apilimit burst=10 nodelay;
            try_files $uri $uri/ =404;
        }

        location /docs/archives/ {
            limit_req zone=botslowdown burst=5;
            try_files $uri =404;
        }

        # --- Proxy Backend Services ---

        # Proxy Admin UI (e.g., running on port 5002 internally)
        location /admin/ {
            proxy_pass http://admin_ui:5002/; # Service name from docker-compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            limit_req zone=apilimit burst=20 nodelay;
        }

        # Proxy Tarpit API (e.g., running on port 8001 internally)
        # This location is targeted by the Lua script (detect_bot.lua) for suspicious requests
        location /api/tarpit {
            internal; # Make this location only accessible internally via ngx.exec or rewrites
            proxy_pass http://tarpit_api:8001/tarpit; # Target the specific tarpit endpoint
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            limit_req zone=botslowdown burst=5;
        }

        # --- Deny Access to Sensitive Files ---
        location ~ /\.ht { deny all; }
        location ~ /.git { deny all; }

        # --- Error Pages ---
        # error_page 403 /403_forbidden.html; # Custom page for blocklisted IPs
        # location = /403_forbidden.html {
        #     root /var/www/html/errors; # Example custom error page location
        #     internal;
        # }
    }
}

    # Additional server blocks can be added here for other domains or services
    # server {
    #     listen 80;
    #     server_name example.com;
    #     location / {
    #         proxy_pass http://example_backend:port;
    #     }
    # }
    #     # Add more configurations as needed
    #     # server {
    #         listen 80;
    #         server_name another_example.com;
    #         location / {
    #             proxy_pass http://another_backend:port;
    #         }
    }