name: Linux Deployment
permissions:
  contents: read

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          docker system prune -af
          sudo apt-get clean
          df -h

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Ensure .env exists
        run: |
          if [ ! -f .env ]; then
            cp sample.env .env
          fi

      - name: Prepare local directories
        run: bash ./scripts/linux/setup_local_dirs.sh

      - name: Generate local secrets
        run: bash ./scripts/linux/generate_secrets.sh --update-env

      - name: Create /app directories for tests
        run: |
          sudo mkdir -p /app/logs /app/data
          sudo chown $(id -u):$(id -g) /app /app/logs /app/data

      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -c constraints.txt

      - name: Validate environment configuration
        run: python scripts/validate_env.py

      - name: Run environment tests
        run: python test/run_all_tests.py

      - name: Build and launch stack
        run: |
          docker compose build --no-cache
          docker compose up -d

      - name: Check running containers
        run: docker compose ps

      - name: Show failing container logs
        if: failure()
        run: docker compose logs

      - name: Tear down stack
        if: always()
        run: docker compose down
