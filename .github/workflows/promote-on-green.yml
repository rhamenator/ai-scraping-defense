name: Promote to Production on Green
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (staging|production|preview)"
        required: false
      ref:
        description: "Git ref to run against"
        required: false
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ inputs.environment || github.ref }}
  cancel-in-progress: true
env:
  REGISTRY: ghcr.io
jobs:
  promote:
    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Login GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login $REGISTRY -u ${{ github.actor }} --password-stdin
      - name: Build & push images (promote)
        run: |
          set -eux
          TAG=${GITHUB_SHA::12}
          declare -A svc_map=([core]="." [proxy]="proxy" [cloud_proxy]="cloud-proxy" [prompt_router]="prompt-router")
          : > images.txt
          for svc in "${!svc_map[@]}"; do dir="${svc_map[$svc]}"; if [ -f "$dir/Dockerfile" ]; then
              image="$REGISTRY/${{ github.repository_owner }}/$svc:$TAG"
              docker build -t "$image" "$dir"; docker push "$image"; echo "$svc=$image" >> images.txt
            fi
          done
      - id: auth
        uses: google-github-actions/auth@v2
        env:
          GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/get-gke-credentials@v2
        env:
          GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
          GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
        with:
          project_id: ${{ env.GCP_PROJECT }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GCP_REGION }}
      - uses: azure/setup-helm@bf6a7d304bc2fdb57e0331155b7ebf2c504acf0a
      - name: Helm upgrade/install (prod)
        run: |
          set -eux
          CHART="helm/ai-scraping-defense-v9"; OV=/tmp/values-images.yaml; echo "images:" > "$OV"
          while IFS='=' read -r svc img; do echo "  $svc: \"$img\"" >> "$OV"; done < images.txt
          helm upgrade --install ai-scraping-defense "$CHART" -n production --create-namespace -f helm/values-production.yaml -f "$OV"
      - name: Wait for rollout
        run: kubectl -n production rollout status deployment --all --timeout=600s || true
