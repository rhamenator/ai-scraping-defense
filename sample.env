# Sample Environment Variables for AI Scraping Defense Stack
# Copy this file to .env and customize values
# --- IMPORTANT: Add .env to your .gitignore file! ---

# --- Redis Configuration ---
# These are typically set by docker-compose service names
# REDIS_HOST=redis
# REDIS_PORT=6379
# REDIS_DB_BLOCKLIST=2
# REDIS_DB_FREQUENCY=3
# REDIS_DB_TAR PIT=1

# --- Blocklist TTL ---
# Duration in seconds for an IP blocklist entry (e.g., 86400 for 1 day, 604800 for 1 week)
BLOCKLIST_TTL_SECONDS=86400 # <-- ADDED

# --- Service Endpoints ---
# These are typically set by docker-compose service names
# ESCALATION_ENDPOINT=http://escalation_engine:8003/escalate
# ESCALATION_WEBHOOK_URL=http://ai_service:8000/analyze

# --- Alerting Configuration ---
# Options: "webhook", "slack", "smtp", "none"
ALERT_METHOD=none
# If using webhook:
ALERT_GENERIC_WEBHOOK_URL=
# If using Slack:
ALERT_SLACK_WEBHOOK_URL=
# If using SMTP:
ALERT_SMTP_HOST=
ALERT_SMTP_PORT=587
ALERT_SMTP_USE_TLS=true
ALERT_EMAIL_FROM=alert@yourdomain.com
ALERT_EMAIL_TO=admin@yourdomain.com
ALERT_SMTP_USER=alert@yourdomain.com
# ALERT_SMTP_PASSWORD - Set via Docker Secret (ALERT_SMTP_PASSWORD_FILE)
ALERT_SMTP_PASSWORD_FILE=/run/secrets/smtp_password # Path inside container

# Minimum severity reason to trigger an alert (e.g., "Local LLM", "High Combined Score")
ALERT_MIN_REASON_SEVERITY="Local LLM"

# --- Escalation Engine: LLM/External API Config ---
# URL for a local LLM API (e.g., Ollama, vLLM)
LOCAL_LLM_API_URL=
# Model name for the local LLM API
LOCAL_LLM_MODEL=
LOCAL_LLM_TIMEOUT=45.0
# URL for an external classification service
EXTERNAL_CLASSIFICATION_API_URL=
EXTERNAL_API_TIMEOUT=15.0
# EXTERNAL_CLASSIFICATION_API_KEY - Set via Docker Secret (EXTERNAL_CLASSIFICATION_API_KEY_FILE)
EXTERNAL_CLASSIFICATION_API_KEY_FILE=/run/secrets/external_api_key

# --- Escalation Engine: IP Reputation Config ---
ENABLE_IP_REPUTATION=false
# URL for the IP reputation service (e.g., AbuseIPDB, GreyNoise)
IP_REPUTATION_API_URL=
IP_REPUTATION_TIMEOUT=10.0
# Score adjustment if IP is flagged as malicious
IP_REPUTATION_MALICIOUS_SCORE_BONUS=0.3
# Service-specific score threshold indicating maliciousness (e.g., 50 for AbuseIPDB confidence)
IP_REPUTATION_MIN_MALICIOUS_THRESHOLD=50
# IP_REPUTATION_API_KEY - Set via Docker Secret (IP_REPUTATION_API_KEY_FILE)
IP_REPUTATION_API_KEY_FILE=/run/secrets/ip_reputation_api_key

# --- Escalation Engine: CAPTCHA Trigger Config ---
ENABLE_CAPTCHA_TRIGGER=false
# Score range to trigger CAPTCHA check
CAPTCHA_SCORE_THRESHOLD_LOW=0.2
CAPTCHA_SCORE_THRESHOLD_HIGH=0.5
# URL within your app to handle CAPTCHA verification
CAPTCHA_VERIFICATION_URL=/verify-human # Example path

# --- AI Service: Community Reporting Config ---
ENABLE_COMMUNITY_REPORTING=false
# URL for the community blocklist API (e.g., AbuseIPDB report endpoint)
COMMUNITY_BLOCKLIST_REPORT_URL=https://api.abuseipdb.com/api/v2/report
COMMUNITY_BLOCKLIST_REPORT_TIMEOUT=10.0
# COMMUNITY_BLOCKLIST_API_KEY - Set via Docker Secret (COMMUNITY_BLOCKLIST_API_KEY_FILE)
COMMUNITY_BLOCKLIST_API_KEY_FILE=/run/secrets/community_blocklist_api_key

# --- File Paths (Usually not changed unless modifying container structure) ---
# TRAINING_ROBOTS_TXT_PATH=/app/config/robots.txt
# TRAINING_MODEL_SAVE_PATH=/app/models/bot_detection_rf_model.joblib

# --- Other Config ---
FLASK_ENV=development # Set to 'production' for Admin UI production mode
# PYTHONPATH=/app # Usually set within service definitions
TAR PIT_FLAG_TTL=300 # TTL for Tarpit IP flags in Redis DB 1
TAR PIT_MAX_FLAGS=5 # Max Tarpit flags before escalation